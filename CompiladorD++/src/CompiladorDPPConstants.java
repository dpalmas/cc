/* Generated By:JJTree&JavaCC: Do not edit this line. CompiladorDPPConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */

public interface CompiladorDPPConstants 
{
  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMENTARIO = 5;
  /** RegularExpression Id. */
  int COMENTARIOS = 6;
  /** RegularExpression Id. */
  int COM = 7;
  /** RegularExpression Id. */
  int PROG = 8;
  /** RegularExpression Id. */
  int IF = 9;
  /** RegularExpression Id. */
  int ELSE = 10;
  /** RegularExpression Id. */
  int ELSEIF = 11;
  /** RegularExpression Id. */
  int FOR = 12;
  /** RegularExpression Id. */
  int SWITCH = 13;
  /** RegularExpression Id. */
  int CASE = 14;
  /** RegularExpression Id. */
  int BREAK = 15;
  /** RegularExpression Id. */
  int DEFAUL = 16;
  /** RegularExpression Id. */
  int DO = 17;
  /** RegularExpression Id. */
  int WHILE = 18;
  /** RegularExpression Id. */
  int WRITE = 19;
  /** RegularExpression Id. */
  int READ = 20;
  /** RegularExpression Id. */
  int VAR = 21;
  /** RegularExpression Id. */
  int TRUE = 22;
  /** RegularExpression Id. */
  int FALSE = 23;
  /** RegularExpression Id. */
  int INT = 24;
  /** RegularExpression Id. */
  int BOOL = 25;
  /** RegularExpression Id. */
  int FLOAT = 26;
  /** RegularExpression Id. */
  int RETURN = 27;
  /** RegularExpression Id. */
  int PRINT = 28;
  /** RegularExpression Id. */
  int FUNCAO = 29;
  /** RegularExpression Id. */
  int ATRIB = 30;
  /** RegularExpression Id. */
  int APAREN = 31;
  /** RegularExpression Id. */
  int FPAREN = 32;
  /** RegularExpression Id. */
  int ACHAVE = 33;
  /** RegularExpression Id. */
  int FCHAVE = 34;
  /** RegularExpression Id. */
  int PEV = 35;
  /** RegularExpression Id. */
  int VIR = 36;
  /** RegularExpression Id. */
  int OP = 37;
  /** RegularExpression Id. */
  int OPL = 38;
  /** RegularExpression Id. */
  int LETRA = 39;
  /** RegularExpression Id. */
  int DIGITO = 40;
  /** RegularExpression Id. */
  int DIGITOS = 41;
  /** RegularExpression Id. */
  int LD = 42;
  /** RegularExpression Id. */
  int FSUB = 43;
  /** RegularExpression Id. */
  int FOP = 44;
  /** RegularExpression Id. */
  int EXPOP = 45;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 46;
  /** RegularExpression Id. */
  int TOKEN_NUMLIT = 47;
  /** RegularExpression Id. */
  int ID_INVALIDO = 48;
  /** RegularExpression Id. */
  int INVALIDO_LEXICO = 49;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<COMENTARIO>",
    "<COMENTARIOS>",
    "<COM>",
    "\"Programa\"",
    "\"se\"",
    "\"senao\"",
    "\"senaose\"",
    "\"para\"",
    "\"alternativa\"",
    "\"caso\"",
    "\"termina\"",
    "\"predef\"",
    "\"faca\"",
    "\"enquanto\"",
    "\"escreva\"",
    "\"leia\"",
    "\"var\"",
    "\"verdadeiro\"",
    "\"falso\"",
    "\"inteiro\"",
    "\"booleano\"",
    "\"decimal\"",
    "\"retorna\"",
    "\"imprime\"",
    "\"funcao\"",
    "\":=\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\",\"",
    "<OP>",
    "<OPL>",
    "<LETRA>",
    "<DIGITO>",
    "<DIGITOS>",
    "<LD>",
    "<FSUB>",
    "<FOP>",
    "<EXPOP>",
    "<IDENTIFICADOR>",
    "<TOKEN_NUMLIT>",
    "<ID_INVALIDO>",
    "<INVALIDO_LEXICO>",
  };

}
