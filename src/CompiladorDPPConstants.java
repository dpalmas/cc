/* Generated By:JavaCC: Do not edit this line. CompiladorDPPConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CompiladorDPPConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int TIPO = 5;
  /** RegularExpression Id. */
  int NUM = 6;
  /** RegularExpression Id. */
  int ID = 7;
  /** RegularExpression Id. */
  int CAD = 8;
  /** RegularExpression Id. */
  int ATRIB = 9;
  /** RegularExpression Id. */
  int SOM = 10;
  /** RegularExpression Id. */
  int SUB = 11;
  /** RegularExpression Id. */
  int MULT = 12;
  /** RegularExpression Id. */
  int DIV = 13;
  /** RegularExpression Id. */
  int INCR = 14;
  /** RegularExpression Id. */
  int DECR = 15;
  /** RegularExpression Id. */
  int PROG = 16;
  /** RegularExpression Id. */
  int IF = 17;
  /** RegularExpression Id. */
  int ELSE = 18;
  /** RegularExpression Id. */
  int ELSEIF = 19;
  /** RegularExpression Id. */
  int FOR = 20;
  /** RegularExpression Id. */
  int SWITCH = 21;
  /** RegularExpression Id. */
  int CASE = 22;
  /** RegularExpression Id. */
  int BREAK = 23;
  /** RegularExpression Id. */
  int DEFAUL = 24;
  /** RegularExpression Id. */
  int DO = 25;
  /** RegularExpression Id. */
  int WHILE = 26;
  /** RegularExpression Id. */
  int WRITE = 27;
  /** RegularExpression Id. */
  int READ = 28;
  /** RegularExpression Id. */
  int APAREN = 29;
  /** RegularExpression Id. */
  int FPAREN = 30;
  /** RegularExpression Id. */
  int ACHAVE = 31;
  /** RegularExpression Id. */
  int FCHAVE = 32;
  /** RegularExpression Id. */
  int ACOUCH = 33;
  /** RegularExpression Id. */
  int FCOUCH = 34;
  /** RegularExpression Id. */
  int PEV = 35;
  /** RegularExpression Id. */
  int VIR = 36;
  /** RegularExpression Id. */
  int PON = 37;
  /** RegularExpression Id. */
  int IG = 38;
  /** RegularExpression Id. */
  int ME = 39;
  /** RegularExpression Id. */
  int MENI = 40;
  /** RegularExpression Id. */
  int MA = 41;
  /** RegularExpression Id. */
  int MAII = 42;
  /** RegularExpression Id. */
  int DIF = 43;
  /** RegularExpression Id. */
  int OR = 44;
  /** RegularExpression Id. */
  int AND = 45;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "<TIPO>",
    "<NUM>",
    "<ID>",
    "<CAD>",
    "\"=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"++\"",
    "\"--\"",
    "\"Programa \"",
    "\"se \"",
    "\"senao \"",
    "\"senaose \"",
    "\"para \"",
    "\"alternativa \"",
    "\"caso \"",
    "\"termina \"",
    "\"predef \"",
    "\"faca \"",
    "\"enquanto \"",
    "\"escreva \"",
    "\"leia \"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"==\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
  };

}
